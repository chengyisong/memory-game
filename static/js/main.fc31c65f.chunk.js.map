{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","components/Instruction/index.js","components/GameOver/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickFriend","id","alt","src","image","Wrapper","children","Title","Instructions","score","GameOver","type","class","clickHandler","selectedCards","selectedIndex","clickedIndex","currentScore","isGameOver","shuffle","i","randomNum","Math","floor","random","indexOf","push","spongeBob","gameOver","App","state","console","log","_this","setState","refreshPage","_this2","this","components_Wrapper","components_Title","components_GameOver","Instruction","map","bob","components_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"o/CAaeA,MAVf,SAAcC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAQC,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,MAC5DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMO,GAAIE,IAAKT,EAAMU,iBCAxBC,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaJ,EAAMY,iBCG5BC,MAJf,SAAeb,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMY,iBCMvBE,MAPf,SAAsBd,GACpB,OAAOC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,oHACnBF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,cAAuCH,EAAAC,EAAAC,cAAA,QAAMI,GAAG,gBAAgBP,EAAMe,gBCKnEC,MARf,SAAkBhB,GAChB,OAAOC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,QAAMI,GAAG,gBAAgBP,EAAMe,QACnDd,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASC,MAAM,kBAAmBb,QAAS,kBAAKL,EAAMmB,iBAAnE,uBCERC,EAAgB,GAChBC,EAAgB,GAChBC,EAAe,GACfC,EAAe,EACfC,GAAa,EAEbC,EAAU,WACZL,EAAgB,GAChBC,EAAgB,GAChB,IAAK,IAAIK,EAAI,EAAGA,EAVC,GAUeA,IAAK,CAEnC,IADA,IAAIC,EAAYC,KAAKC,MAAuB,GAAjBD,KAAKE,UACzBT,EAAcU,QAAQJ,IAAc,GACzCA,EAAYC,KAAKC,MAAuB,GAAjBD,KAAKE,UAE9BT,EAAcW,KAAKL,GACnBP,EAAcY,KAAKC,EAAUN,MAI7BO,EAAW,WACbd,EAAgB,GAChBI,GAAa,GAGfC,QA+DeU,6MA1DbC,MAAQ,CACNhB,mBAGFd,YAAc,SAAAC,GACRe,EAAaS,QAAQxB,GAAM,GAC7BgB,IACAE,IACAY,QAAQC,IAAIlB,GACZmB,EAAKC,SAAS,CAAEpB,kBAChBE,EAAaU,KAAKzB,GAClB8B,QAAQC,IAAIhB,KAGZY,IACAK,EAAKC,SAAS,CAAEpB,sBAIpBqB,YAAc,WACZrB,EAAgB,GAChBC,EAAgB,GAChBC,EAAe,GACfC,EAAe,EACfC,GAAa,EACbC,IACAc,EAAKC,SAAS,CAAEpB,2FAIT,IAAAsB,EAAAC,KACP,OAAInB,EAEAvB,EAAAC,EAAAC,cAACyC,EAAD,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,8BACA5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAU/B,MAAOQ,EAAcJ,aAAcwB,KAAKF,eAKpDxC,EAAAC,EAAAC,cAACyC,EAAD,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,8BACA5C,EAAAC,EAAAC,cAAC4C,EAAD,CAAahC,MAAOQ,IACnBoB,KAAKP,MAAMhB,cAAc4B,IAAI,SAAAC,GAAG,OAC/BhD,EAAAC,EAAAC,cAAC+C,EAAD,CACE5C,YAAaoC,EAAKpC,YAClBC,GAAI0C,EAAI1C,GACR4C,IAAKF,EAAI1C,GACTG,MAAOuC,EAAIvC,kBAlDP0C,aC/BlBC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fc31c65f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\"  onClick={() => props.clickFriend(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.id} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"container\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Instructions(props) {\r\n  return <div>\r\n            <p className=\"ins\"><em>Click the SpongeBob that you have not clicked before. You lose if you click the same SpongeBob twice.</em></p>\r\n            <p className=\"scoreDisplay\">Your Score:<span id=\"scoreDisplay\">{props.score}</span></p>\r\n        </div>\r\n}\r\n\r\nexport default Instructions;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction GameOver(props) {\r\n  return <div>\r\n            <p>Game Over!</p>\r\n            <p>Your Final Score:<span id=\"scoreDisplay\">{props.score}</span></p>\r\n            <button type=\"button\" class=\"btn btn-primary\"  onClick={()=> props.clickHandler()}>Play Again</button>\r\n        </div>\r\n}\r\n\r\nexport default GameOver;\r\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Instruction from \"./components/Instruction\";\nimport GameOver from \"./components/GameOver\";\nimport spongeBob from \"./spongeBobs.json\";\n\nconst totalCards = 10;\nlet selectedCards = [];\nlet selectedIndex = [];\nlet clickedIndex = [];\nlet currentScore = 0;\nlet isGameOver = false;\n\nlet shuffle = function () {\n  selectedCards = [];\n  selectedIndex = [];\n  for (let i = 0; i < totalCards; i++) {\n    let randomNum = Math.floor(Math.random() * (37));\n    while (selectedIndex.indexOf(randomNum) >= 0) {\n      randomNum = Math.floor(Math.random() * (37));\n    }\n    selectedIndex.push(randomNum);\n    selectedCards.push(spongeBob[randomNum]);\n  }\n}\n\nlet gameOver = function () {\n  selectedCards = [];\n  isGameOver = true;\n}\n\nshuffle();\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    selectedCards\n  };\n\n  clickFriend = id => {\n    if (clickedIndex.indexOf(id) < 0) {\n      currentScore++;\n      shuffle();\n      console.log(selectedCards);\n      this.setState({ selectedCards });\n      clickedIndex.push(id);\n      console.log(clickedIndex)\n    }\n    else {\n      gameOver();\n      this.setState({ selectedCards });\n    }\n  };\n  \n  refreshPage = () => {\n    selectedCards = [];\n    selectedIndex = [];\n    clickedIndex = [];\n    currentScore = 0;\n    isGameOver = false;\n    shuffle();\n    this.setState({ selectedCards });\n    // window.location.reload();\n  }\n\n  render() {\n    if (isGameOver) {\n      return (\n        <Wrapper>\n          <Title>SpongeBob Memory Game</Title>\n          <GameOver score={currentScore} clickHandler={this.refreshPage}></GameOver>\n        </Wrapper>\n      );\n    } else {\n      return (\n        <Wrapper>\n          <Title>SpongeBob Memory Game</Title>\n          <Instruction score={currentScore}></Instruction>\n          {this.state.selectedCards.map(bob => (\n            <Card\n              clickFriend={this.clickFriend}\n              id={bob.id}\n              key={bob.id}\n              image={bob.image}\n            />\n          ))}\n        </Wrapper>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}